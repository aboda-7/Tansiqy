// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tansiqy.DAL.Database;

#nullable disable

namespace Tansiqy.DAL.Migrations
{
    [DbContext(typeof(TansiqyContext))]
    partial class TansiqyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Degree", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Faculty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("Tansiqy.DAL.Models.DegreeDepartment", b =>
                {
                    b.Property<int>("DegID")
                        .HasColumnType("int");

                    b.Property<int>("DepID")
                        .HasColumnType("int");

                    b.HasKey("DegID", "DepID");

                    b.HasIndex("DepID");

                    b.ToTable("DegreeDepartments");
                });

            modelBuilder.Entity("Tansiqy.DAL.Models.FacultyDegree", b =>
                {
                    b.Property<int>("FID")
                        .HasColumnType("int");

                    b.Property<int>("DegID")
                        .HasColumnType("int");

                    b.HasKey("FID", "DegID");

                    b.HasIndex("DegID");

                    b.ToTable("FacultyDegrees");
                });

            modelBuilder.Entity("Tansiqy.DAL.Models.FacultyUniversity", b =>
                {
                    b.Property<int>("FID")
                        .HasColumnType("int");

                    b.Property<int>("UniID")
                        .HasColumnType("int");

                    b.HasKey("FID", "UniID");

                    b.HasIndex("UniID");

                    b.ToTable("FacultyUniversities");
                });

            modelBuilder.Entity("Tansiqy.DAL.Models.UniversityDepartment", b =>
                {
                    b.Property<int>("UniID")
                        .HasColumnType("int");

                    b.Property<int>("DepID")
                        .HasColumnType("int");

                    b.HasKey("UniID", "DepID");

                    b.HasIndex("DepID");

                    b.ToTable("UniversityDepartments");
                });

            modelBuilder.Entity("Tansiqy.DAL.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DegID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DegID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("University", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.HasOne("Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Tansiqy.DAL.Models.DegreeDepartment", b =>
                {
                    b.HasOne("Degree", "Degree")
                        .WithMany("DegreeDepartments")
                        .HasForeignKey("DegID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Department", "Department")
                        .WithMany("DegreeDepartments")
                        .HasForeignKey("DepID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Degree");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Tansiqy.DAL.Models.FacultyDegree", b =>
                {
                    b.HasOne("Degree", "Degree")
                        .WithMany("FacultyDegrees")
                        .HasForeignKey("DegID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Faculty", "Faculty")
                        .WithMany("FacultyDegrees")
                        .HasForeignKey("FID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Degree");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Tansiqy.DAL.Models.FacultyUniversity", b =>
                {
                    b.HasOne("Faculty", "Faculty")
                        .WithMany("FacultyUniversities")
                        .HasForeignKey("FID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("University", "University")
                        .WithMany("FacultyUniversities")
                        .HasForeignKey("UniID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Tansiqy.DAL.Models.UniversityDepartment", b =>
                {
                    b.HasOne("Department", "Department")
                        .WithMany("UniversityDepartments")
                        .HasForeignKey("DepID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("University", "University")
                        .WithMany("UniversityDepartments")
                        .HasForeignKey("UniID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Tansiqy.DAL.Models.User", b =>
                {
                    b.HasOne("Degree", "Degree")
                        .WithMany("Users")
                        .HasForeignKey("DegID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Degree");
                });

            modelBuilder.Entity("Degree", b =>
                {
                    b.Navigation("DegreeDepartments");

                    b.Navigation("FacultyDegrees");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Department", b =>
                {
                    b.Navigation("DegreeDepartments");

                    b.Navigation("UniversityDepartments");
                });

            modelBuilder.Entity("Faculty", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("FacultyDegrees");

                    b.Navigation("FacultyUniversities");
                });

            modelBuilder.Entity("University", b =>
                {
                    b.Navigation("FacultyUniversities");

                    b.Navigation("UniversityDepartments");
                });
#pragma warning restore 612, 618
        }
    }
}
